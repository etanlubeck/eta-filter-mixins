@import "compass/css3";

//-----------------------------------------------
// The following html5-boilerplate styles should
// probably be customized for each site
//-----------------------------------------------
body, select, input, textarea {
  color: $font-color;
  // Set your base font here, to apply evenly
  // font-family: Georgia, serif;
}

//-----------------------------------
// Add your own custom styles below
//-----------------------------------

//Filters Of Awesomeness

@mixin grayscale ($percent_grey) {
				
				filter: grayscale($percent_grey); 
			    -webkit-filter: grayscale($percent_grey); 
			    -moz-filter: grayscale($percent_grey);
			    -ms-filter: grayscale($percent_grey); 
			    -o-filter: grayscale($percent_grey);  
			    filter: url(resources.svg#desaturate); 
			    filter: gray; 		    
}

@mixin sepia ($percent_sepia) {
		filter: sepia($percent_sepia); 
			    -webkit-filter: sepia($percent_sepia); 
			    -moz-filter: sepia($percent_sepia);
			    -ms-filter: sepia($percent_sepia); 
			    -o-filter: sepia($percent_sepia);  
			    // filter: url(resources.svg#desaturate); 
			    filter: sepia; 
			     
}

@mixin saturate ($percent_saturate) {
		filter: saturate($percent_saturate); 
			    -webkit-filter: saturate($percent_saturate); 
			    -moz-filter: saturate($percent_saturate);
			    -ms-filter: saturate($percent_saturate); 
			    -o-filter: saturate($percent_saturate);  
			    // filter: url(resources.svg#desaturate); 
			   
			   
}

@mixin hue-rotate ($angle) {
		filter: hue-rotate($angle); 
			    -webkit-filter: hue-rotate($angle); 
			    -moz-filter: hue-rotate($angle);
			    -ms-filter: hue-rotate($angle); 
			    -o-filter: hue-rotate($angle);  
			    // filter: url(resources.svg#desaturate); 
		
			    
}

@mixin invert ($percent_invert) {
		filter: invert($percent_invert); 
			    -webkit-filter: invert($percent_invert); 
			    -moz-filter: invert($percent_invert);
			    -ms-filter: invert($percent_invert); 
			    -o-filter: invert($percent_invert);  
			    // filter: url(resources.svg#desaturate); 
			  
			   
}

@mixin brightness ($percent_bright) {
		filter: brightness($percent_bright); 
			    -webkit-filter: brightness($percent_bright); 
			    -moz-filter: brightness($percent_bright);
			    -ms-filter: brightness($percent_bright); 
			    -o-filter: brightness($percent_bright);  
			    // filter: url(resources.svg#desaturate); 
			 
			   
}

@mixin contrast ($percent_contrast) {
			
		filter: contrast($percent_contrast); 
			    -webkit-filter: contrast($percent_contrast); 
			    -moz-filter: contrast($percent_contrast);
			    -ms-filter: contrast($percent_contrast); 
			    -o-filter: contrast($percent_contrast);  
			    filter: url(resources.svg#desaturate); 
			 
			   
		
}

@mixin blur ($length) {
		filter: blur($length); 
			    -webkit-filter: blur($length); 
			    -moz-filter: blur($length);
			    -ms-filter: blur($length); 
			    -o-filter: blur($length);  
			    // filter: url(resources.svg#desaturate); 
			   
			    
}

body,html {margin:0; padding:0;}



#container {}

header {
	margin:10px;
	background:gray;
	color:#fefefe;
}

#main {
	#filters{
		ul {
			list-style-type:none;
			list-style-position:outside;
			display:block;
			margin:0;
			padding:0;

			li {	
				position:relative;
				float:left;
				display:block;
				width:400px;
				font-family:'Helvetica';
				margin:10px;
				span {

					&.grayscale{
					@include grayscale(100%);
					}
					
					&.sepia{
					@include sepia(100%);
					}

					&.hue-rotate {
					@include hue-rotate(55deg);
					}
					

					&.brightness {
					@include brightness(80%);
					}

					&.contrast {
					@include contrast(40%);
					}

					&.blur {
					@include blur(5px);
					}

					/* Recieving syntax error: wrong number of arguments (1 for 2) */
					// &.saturate {
					// @include saturate(100%);
					// }

					/* Recieving syntax error: 100 is not a color for invert */
					// &.invert {
					// @include invert(100);
					// }
				}
			}
		}
	}

}

footer {}
